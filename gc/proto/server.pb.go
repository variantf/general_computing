// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gc/proto/server.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResultSet struct {
	Columns              []string  `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Row                  []*Result `protobuf:"bytes,2,rep,name=row,proto3" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResultSet) Reset()         { *m = ResultSet{} }
func (m *ResultSet) String() string { return proto.CompactTextString(m) }
func (*ResultSet) ProtoMessage()    {}
func (*ResultSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{0}
}

func (m *ResultSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultSet.Unmarshal(m, b)
}
func (m *ResultSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultSet.Marshal(b, m, deterministic)
}
func (m *ResultSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultSet.Merge(m, src)
}
func (m *ResultSet) XXX_Size() int {
	return xxx_messageInfo_ResultSet.Size(m)
}
func (m *ResultSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultSet.DiscardUnknown(m)
}

var xxx_messageInfo_ResultSet proto.InternalMessageInfo

func (m *ResultSet) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *ResultSet) GetRow() []*Result {
	if m != nil {
		return m.Row
	}
	return nil
}

type Result struct {
	Value                []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type Pipelines struct {
	Pipelines            []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Pipelines) Reset()         { *m = Pipelines{} }
func (m *Pipelines) String() string { return proto.CompactTextString(m) }
func (*Pipelines) ProtoMessage()    {}
func (*Pipelines) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{2}
}

func (m *Pipelines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipelines.Unmarshal(m, b)
}
func (m *Pipelines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipelines.Marshal(b, m, deterministic)
}
func (m *Pipelines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipelines.Merge(m, src)
}
func (m *Pipelines) XXX_Size() int {
	return xxx_messageInfo_Pipelines.Size(m)
}
func (m *Pipelines) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipelines.DiscardUnknown(m)
}

var xxx_messageInfo_Pipelines proto.InternalMessageInfo

func (m *Pipelines) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

type DelRecords struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Condition            *Filter  `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRecords) Reset()         { *m = DelRecords{} }
func (m *DelRecords) String() string { return proto.CompactTextString(m) }
func (*DelRecords) ProtoMessage()    {}
func (*DelRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{3}
}

func (m *DelRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRecords.Unmarshal(m, b)
}
func (m *DelRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRecords.Marshal(b, m, deterministic)
}
func (m *DelRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRecords.Merge(m, src)
}
func (m *DelRecords) XXX_Size() int {
	return xxx_messageInfo_DelRecords.Size(m)
}
func (m *DelRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRecords.DiscardUnknown(m)
}

var xxx_messageInfo_DelRecords proto.InternalMessageInfo

func (m *DelRecords) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *DelRecords) GetCondition() *Filter {
	if m != nil {
		return m.Condition
	}
	return nil
}

type NewRecords struct {
	Table                string     `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Records              *ResultSet `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewRecords) Reset()         { *m = NewRecords{} }
func (m *NewRecords) String() string { return proto.CompactTextString(m) }
func (*NewRecords) ProtoMessage()    {}
func (*NewRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{4}
}

func (m *NewRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRecords.Unmarshal(m, b)
}
func (m *NewRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRecords.Marshal(b, m, deterministic)
}
func (m *NewRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRecords.Merge(m, src)
}
func (m *NewRecords) XXX_Size() int {
	return xxx_messageInfo_NewRecords.Size(m)
}
func (m *NewRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRecords.DiscardUnknown(m)
}

var xxx_messageInfo_NewRecords proto.InternalMessageInfo

func (m *NewRecords) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *NewRecords) GetRecords() *ResultSet {
	if m != nil {
		return m.Records
	}
	return nil
}

type UpdateRecords struct {
	Table                string     `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Records              *ResultSet `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
	Condition            *Filter    `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateRecords) Reset()         { *m = UpdateRecords{} }
func (m *UpdateRecords) String() string { return proto.CompactTextString(m) }
func (*UpdateRecords) ProtoMessage()    {}
func (*UpdateRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{5}
}

func (m *UpdateRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecords.Unmarshal(m, b)
}
func (m *UpdateRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecords.Marshal(b, m, deterministic)
}
func (m *UpdateRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecords.Merge(m, src)
}
func (m *UpdateRecords) XXX_Size() int {
	return xxx_messageInfo_UpdateRecords.Size(m)
}
func (m *UpdateRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecords.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecords proto.InternalMessageInfo

func (m *UpdateRecords) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *UpdateRecords) GetRecords() *ResultSet {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *UpdateRecords) GetCondition() *Filter {
	if m != nil {
		return m.Condition
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_13112cc8088e14a8, []int{6}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ResultSet)(nil), "proto.ResultSet")
	proto.RegisterType((*Result)(nil), "proto.Result")
	proto.RegisterType((*Pipelines)(nil), "proto.Pipelines")
	proto.RegisterType((*DelRecords)(nil), "proto.DelRecords")
	proto.RegisterType((*NewRecords)(nil), "proto.NewRecords")
	proto.RegisterType((*UpdateRecords)(nil), "proto.UpdateRecords")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("gc/proto/server.proto", fileDescriptor_13112cc8088e14a8) }

var fileDescriptor_13112cc8088e14a8 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x90, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x2d, 0x0d, 0x94, 0x0e, 0x12, 0x75, 0x83, 0xa6, 0xe1, 0xa0, 0x64, 0x4f, 0x44, 0x03,
	0x18, 0xbc, 0x79, 0xc4, 0x4a, 0xe2, 0x05, 0x75, 0x89, 0x1f, 0xa0, 0x94, 0xd1, 0x34, 0xd9, 0x76,
	0x9b, 0xed, 0x16, 0xc2, 0xc5, 0x0f, 0xe8, 0xa7, 0x32, 0xed, 0xb6, 0x96, 0x3f, 0x89, 0x5e, 0x3c,
	0x35, 0xaf, 0xef, 0xcd, 0x6f, 0x76, 0x1e, 0x9c, 0x7f, 0xf8, 0xa3, 0x58, 0x0a, 0x25, 0x46, 0x09,
	0xca, 0x15, 0xca, 0x61, 0x2e, 0x48, 0x3d, 0xff, 0x74, 0x2f, 0x7e, 0xdc, 0x77, 0x21, 0xc3, 0x94,
	0x7b, 0xda, 0xa6, 0x53, 0xb0, 0x19, 0x26, 0x29, 0x57, 0x73, 0x54, 0xc4, 0x01, 0xcb, 0x17, 0x3c,
	0x0d, 0xa3, 0xc4, 0x31, 0x7a, 0x66, 0xdf, 0x66, 0xa5, 0x24, 0x57, 0x60, 0x4a, 0xb1, 0x76, 0x6a,
	0x3d, 0xb3, 0xdf, 0x1a, 0xb7, 0xf5, 0xec, 0x50, 0x0f, 0xb2, 0xcc, 0xa1, 0x97, 0xd0, 0xd0, 0x92,
	0x74, 0xa0, 0xbe, 0xf2, 0x78, 0x8a, 0x05, 0x42, 0x0b, 0x7a, 0x0f, 0xf6, 0x4b, 0x10, 0x23, 0x0f,
	0x22, 0x4c, 0xc8, 0x00, 0xec, 0xb8, 0x14, 0x79, 0xac, 0x35, 0x3e, 0x29, 0x98, 0x65, 0x88, 0x55,
	0x09, 0xfa, 0x0c, 0xe0, 0x22, 0x67, 0xe8, 0x0b, 0xb9, 0x4c, 0x32, 0xbe, 0xf2, 0x16, 0x3c, 0xe3,
	0x1b, 0x19, 0x3f, 0x17, 0xe4, 0x06, 0x6c, 0x5f, 0x44, 0xcb, 0x40, 0x05, 0x22, 0x72, 0x6a, 0x3d,
	0x63, 0xeb, 0x99, 0xd3, 0x80, 0x2b, 0x94, 0xac, 0xf2, 0xe9, 0x0c, 0x60, 0x86, 0xeb, 0xdf, 0x81,
	0xd7, 0x60, 0x49, 0x1d, 0x28, 0x70, 0xa7, 0x3b, 0x57, 0xcf, 0x51, 0xb1, 0x32, 0x40, 0x3f, 0xa1,
	0xfd, 0x16, 0x2f, 0x3d, 0x85, 0xff, 0x86, 0xdc, 0xbd, 0xc7, 0xfc, 0xe3, 0x1e, 0x0b, 0xea, 0x8f,
	0x61, 0xac, 0x36, 0xe3, 0x2f, 0x03, 0x9a, 0x0f, 0x22, 0x8c, 0x53, 0x85, 0x92, 0x0c, 0xc1, 0x7a,
	0x4d, 0x51, 0x6e, 0xdc, 0x09, 0xd9, 0x6f, 0xb7, 0x7b, 0xb0, 0x99, 0x1e, 0x91, 0x01, 0x34, 0x5d,
	0xe4, 0xa8, 0xd0, 0x9d, 0x90, 0xb3, 0xc2, 0xaf, 0x7a, 0xef, 0x1e, 0x17, 0xbf, 0xf2, 0x4d, 0x3a,
	0xfe, 0x14, 0x25, 0x28, 0xd5, 0x56, 0xbc, 0x6a, 0xf5, 0x20, 0x7e, 0x0b, 0x4d, 0xdd, 0x91, 0x3b,
	0x21, 0x9d, 0xc2, 0xdb, 0x29, 0x6d, 0x7f, 0x62, 0xd1, 0xc8, 0xe5, 0xdd, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0xcb, 0xe5, 0x41, 0xd9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComputerClient is the client API for Computer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputerClient interface {
	QueryDB(ctx context.Context, in *Pipeline, opts ...grpc.CallOption) (*ResultSet, error)
	DeleteDB(ctx context.Context, in *DelRecords, opts ...grpc.CallOption) (*Empty, error)
	InsertDB(ctx context.Context, in *NewRecords, opts ...grpc.CallOption) (*Empty, error)
	UpdateDB(ctx context.Context, in *UpdateRecords, opts ...grpc.CallOption) (*Empty, error)
}

type computerClient struct {
	cc *grpc.ClientConn
}

func NewComputerClient(cc *grpc.ClientConn) ComputerClient {
	return &computerClient{cc}
}

func (c *computerClient) QueryDB(ctx context.Context, in *Pipeline, opts ...grpc.CallOption) (*ResultSet, error) {
	out := new(ResultSet)
	err := c.cc.Invoke(ctx, "/proto.Computer/QueryDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computerClient) DeleteDB(ctx context.Context, in *DelRecords, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Computer/DeleteDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computerClient) InsertDB(ctx context.Context, in *NewRecords, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Computer/InsertDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computerClient) UpdateDB(ctx context.Context, in *UpdateRecords, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Computer/UpdateDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComputerServer is the server API for Computer service.
type ComputerServer interface {
	QueryDB(context.Context, *Pipeline) (*ResultSet, error)
	DeleteDB(context.Context, *DelRecords) (*Empty, error)
	InsertDB(context.Context, *NewRecords) (*Empty, error)
	UpdateDB(context.Context, *UpdateRecords) (*Empty, error)
}

// UnimplementedComputerServer can be embedded to have forward compatible implementations.
type UnimplementedComputerServer struct {
}

func (*UnimplementedComputerServer) QueryDB(ctx context.Context, req *Pipeline) (*ResultSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDB not implemented")
}
func (*UnimplementedComputerServer) DeleteDB(ctx context.Context, req *DelRecords) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDB not implemented")
}
func (*UnimplementedComputerServer) InsertDB(ctx context.Context, req *NewRecords) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertDB not implemented")
}
func (*UnimplementedComputerServer) UpdateDB(ctx context.Context, req *UpdateRecords) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDB not implemented")
}

func RegisterComputerServer(s *grpc.Server, srv ComputerServer) {
	s.RegisterService(&_Computer_serviceDesc, srv)
}

func _Computer_QueryDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pipeline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputerServer).QueryDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Computer/QueryDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputerServer).QueryDB(ctx, req.(*Pipeline))
	}
	return interceptor(ctx, in, info, handler)
}

func _Computer_DeleteDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputerServer).DeleteDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Computer/DeleteDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputerServer).DeleteDB(ctx, req.(*DelRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Computer_InsertDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputerServer).InsertDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Computer/InsertDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputerServer).InsertDB(ctx, req.(*NewRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Computer_UpdateDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputerServer).UpdateDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Computer/UpdateDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputerServer).UpdateDB(ctx, req.(*UpdateRecords))
	}
	return interceptor(ctx, in, info, handler)
}

var _Computer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Computer",
	HandlerType: (*ComputerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryDB",
			Handler:    _Computer_QueryDB_Handler,
		},
		{
			MethodName: "DeleteDB",
			Handler:    _Computer_DeleteDB_Handler,
		},
		{
			MethodName: "InsertDB",
			Handler:    _Computer_InsertDB_Handler,
		},
		{
			MethodName: "UpdateDB",
			Handler:    _Computer_UpdateDB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gc/proto/server.proto",
}
